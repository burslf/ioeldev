[{"/home/burslf/Code/twitwi-social-media/src/index.js":"1","/home/burslf/Code/twitwi-social-media/src/auth.js":"2","/home/burslf/Code/twitwi-social-media/src/Component/App.js":"3","/home/burslf/Code/twitwi-social-media/src/firebase-cred/firebase.js":"4","/home/burslf/Code/twitwi-social-media/src/Component/TweetsContainer.jsx":"5","/home/burslf/Code/twitwi-social-media/src/Component/Navbar.jsx":"6","/home/burslf/Code/twitwi-social-media/src/Component/SignUp.jsx":"7","/home/burslf/Code/twitwi-social-media/src/Component/Login.jsx":"8","/home/burslf/Code/twitwi-social-media/src/Component/UserProfile.jsx":"9","/home/burslf/Code/twitwi-social-media/src/Component/Settings.jsx":"10","/home/burslf/Code/twitwi-social-media/src/Component/Search.jsx":"11","/home/burslf/Code/twitwi-social-media/src/Component/PostPage.jsx":"12","/home/burslf/Code/twitwi-social-media/src/Component/TweetForm.jsx":"13","/home/burslf/Code/twitwi-social-media/src/Component/TweetBody.jsx":"14","/home/burslf/Code/twitwi-social-media/src/Component/MonModal.jsx":"15"},{"size":266,"mtime":1614409638011,"results":"16","hashOfConfig":"17"},{"size":480,"mtime":1614409638011,"results":"18","hashOfConfig":"17"},{"size":3622,"mtime":1614413988660,"results":"19","hashOfConfig":"17"},{"size":434,"mtime":1614409638011,"results":"20","hashOfConfig":"17"},{"size":4599,"mtime":1614414793894,"results":"21","hashOfConfig":"17"},{"size":3875,"mtime":1614410658775,"results":"22","hashOfConfig":"17"},{"size":1770,"mtime":1614409638011,"results":"23","hashOfConfig":"17"},{"size":3740,"mtime":1614409638010,"results":"24","hashOfConfig":"17"},{"size":5851,"mtime":1614414949799,"results":"25","hashOfConfig":"17"},{"size":10051,"mtime":1614409638011,"results":"26","hashOfConfig":"17"},{"size":3963,"mtime":1614409638011,"results":"27","hashOfConfig":"17"},{"size":1029,"mtime":1614409638010,"results":"28","hashOfConfig":"17"},{"size":1259,"mtime":1614409638011,"results":"29","hashOfConfig":"17"},{"size":6363,"mtime":1614414745345,"results":"30","hashOfConfig":"17"},{"size":950,"mtime":1614409638010,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1fkuvrk",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"/home/burslf/Code/twitwi-social-media/src/index.js",[],["66","67"],"/home/burslf/Code/twitwi-social-media/src/auth.js",[],"/home/burslf/Code/twitwi-social-media/src/Component/App.js",[],"/home/burslf/Code/twitwi-social-media/src/firebase-cred/firebase.js",[],"/home/burslf/Code/twitwi-social-media/src/Component/TweetsContainer.jsx",["68","69","70","71","72","73","74"],"/home/burslf/Code/twitwi-social-media/src/Component/Navbar.jsx",["75"],"import \"../navbar.scss\";\nimport { Link } from 'react-router-dom'\nimport firebase from '../firebase-cred/firebase'\nimport 'firebase/auth'\nimport {AuthContext} from '../auth'\nimport { useContext, useState } from 'react'\nimport Modal from 'react-bootstrap/Modal'\nimport Button from 'react-bootstrap/Button'\n\nconst Navbar = (props) => {\n  const [smShow, setSmShow] = useState(false);\n\n  const {currentUser} = useContext(AuthContext)\n\n  const handleLogout = () => {\n  }\n\n  const logout = () => {\n    setSmShow(false)\n    firebase.auth().signOut()\n  }\n  return (\n    <nav className=\"my-nav\">\n        <div className='logo'> ioeldev </div>\n      <div className='nav-links'> \n      <ul >\n        <li>\n        <Link to=\"/\"> <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"-2 -1.5 24 24\" width=\"24\" height=\"24\" preserveAspectRatio=\"xMinYMin\" className=\"icon__icon\"><path d=\"M13 20.565v-5a3 3 0 0 0-6 0v5H2a2 2 0 0 1-2-2V7.697a2 2 0 0 1 .971-1.715l8-4.8a2 2 0 0 1 2.058 0l8 4.8A2 2 0 0 1 20 7.697v10.868a2 2 0 0 1-2 2h-5z\"></path></svg> </Link>\n        </li>\n        {currentUser && <li>\n        <Link to={`profile/${currentUser.uid}`}> <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"-2 -2 24 24\" width=\"24\" height=\"24\" preserveAspectRatio=\"xMinYMin\" className=\"icon__icon\"><path d=\"M10 20C4.477 20 0 15.523 0 10S4.477 0 10 0s10 4.477 10 10-4.477 10-10 10zm0-2a8 8 0 1 0 0-16 8 8 0 0 0 0 16zm0-14a4 4 0 0 1 4 4v2a4 4 0 1 1-8 0V8a4 4 0 0 1 4-4zm0 2a2 2 0 0 0-2 2v2a2 2 0 1 0 4 0V8a2 2 0 0 0-2-2zM5.91 16.876a8.033 8.033 0 0 1-1.58-1.232 5.57 5.57 0 0 1 2.204-1.574 1 1 0 1 1 .733 1.86c-.532.21-.993.538-1.358.946zm8.144.022a3.652 3.652 0 0 0-1.41-.964 1 1 0 1 1 .712-1.868 5.65 5.65 0 0 1 2.284 1.607 8.032 8.032 0 0 1-1.586 1.225z\"></path></svg> </Link>\n        </li>}\n        {currentUser && <li>\n        <Link to=\"/search\"> <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"-2.5 -2.5 24 24\" width=\"24\" height=\"24\" preserveAspectRatio=\"xMinYMin\" className=\"icon__icon\"><path d=\"M8 14A6 6 0 1 0 8 2a6 6 0 0 0 0 12zm6.32-1.094l3.58 3.58a1 1 0 1 1-1.415 1.413l-3.58-3.58a8 8 0 1 1 1.414-1.414z\"></path></svg> </Link>\n        </li>}\n        {currentUser && <li>\n        <Link to=\"/settings\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"-2 -2 24 24\" width=\"24\" height=\"24\" preserveAspectRatio=\"xMinYMin\" className=\"icon__icon\"><path d=\"M20 8.163A2.106 2.106 0 0 0 18.926 10c0 .789.433 1.476 1.074 1.837l-.717 2.406a2.105 2.105 0 0 0-2.218 3.058l-2.062 1.602A2.104 2.104 0 0 0 11.633 20l-3.29-.008a2.104 2.104 0 0 0-3.362-1.094l-2.06-1.615A2.105 2.105 0 0 0 .715 14.24L0 11.825A2.106 2.106 0 0 0 1.051 10C1.051 9.22.63 8.54 0 8.175L.715 5.76a2.105 2.105 0 0 0 2.207-3.043L4.98 1.102A2.104 2.104 0 0 0 8.342.008L11.634 0a2.104 2.104 0 0 0 3.37 1.097L17.064 2.7a2.105 2.105 0 0 0 2.218 3.058L20 8.162zM10 14a4 4 0 1 0 0-8 4 4 0 0 0 0 8z\"></path></svg></Link>\n        </li>}\n        {currentUser && <li>\n        <Link to=\"/\"><svg onClick={() => setSmShow(true)} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"-6 -2 24 24\" width=\"24\" height=\"24\" preserveAspectRatio=\"xMinYMin\" className=\"icon__icon\"><path d=\"M2 0h8a2 2 0 0 1 2 2v16a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V2a2 2 0 0 1 2-2zm0 2v16h8V2H2zm2 7h1a1 1 0 1 1 0 2H4a1 1 0 0 1 0-2z\"></path></svg></Link>\n        </li>}\n      </ul>\n      </div>\n      <Modal\n          size='sm'\n          show={smShow}\n          onHide={() => setSmShow(false)}\n          aria-labelledby='example-modal-sizes-title-sm'\n        >\n          <Modal.Body>\n            <div className='modalContainer'>\n            Logout ?\n              <div className='logout-buttons'>\n                <Button onClick={() => logout()}>\n                  Logout\n                </Button>\n                <Button onClick={() => setSmShow(false)}>Cancel</Button>\n              </div>\n            </div>\n          </Modal.Body>\n        </Modal>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","/home/burslf/Code/twitwi-social-media/src/Component/SignUp.jsx",[],"/home/burslf/Code/twitwi-social-media/src/Component/Login.jsx",[],"/home/burslf/Code/twitwi-social-media/src/Component/UserProfile.jsx",["76","77"],"/home/burslf/Code/twitwi-social-media/src/Component/Settings.jsx",["78","79"],"import \"../settings.scss\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport Overlay from \"react-bootstrap/Overlay\";\nimport Popover from \"react-bootstrap/Popover\";\nimport { useRef, useState, useEffect, useContext } from \"react\";\nimport firebase from \"../firebase-cred/firebase\";\nimport \"firebase/storage\";\nimport { AuthContext } from \"../auth\";\n\nconst Settings = (props) => {\n  const [username, setUsername] = useState(\"\");\n  const [bio, setBio] = useState(\"\");\n  const [password, setPassword] = useState('********')\n  const [confirmPassword, setConfirmPassword] = useState('')\n  const [showDoesntMatch, setDoesntMatch] = useState(false)\n  const [isUserEditable, setUserEditable] = useState(true);\n  const [isBioEditable, setBioEditable] = useState(true);\n  const [isPasswordEditable, setPasswordEditable] = useState(true)\n  const [showErrorPassword, setShowErrorPassword] = useState(false)\n  const [showSuccess, setShowSuccess] = useState(false);\n  const [showEmpty, setShowEmpty] = useState(false);\n  const [profilePic, setProfilePic] = useState(null);\n\n  const { currentUser } = useContext(AuthContext);\n  const [target, setTarget] = useState(null);\n  const ref = useRef(null);\n\n  const getUserName = () => {\n    const user = firebase.auth().currentUser;\n    const name = {};\n    if (user != null) {\n      name.username = user.displayName;\n      setUsername(getUserInfo().name);\n    }\n  };\n  const getBio = () => {\n    const user = firebase.auth().currentUser\n    const userDB = firebase.firestore().collection('users')\n    if(user != null) {\n      let bio = \"\"\n      userDB.doc(user.uid).get().then(user => {\n        bio = user.data().bio\n        setBio(bio)\n      })\n    }\n  }\n  const getUserInfo = () => {\n    const user = firebase.auth().currentUser;\n    const userInfos = {};\n\n    if (user != null) {\n      userInfos.name = user.displayName;\n      userInfos.email = user.email;\n      userInfos.photoUrl = user.photoURL;\n      userInfos.emailVerified = user.emailVerified;\n      userInfos.uid = user.uid;\n    }\n    return userInfos;\n  };\n\n  useEffect(() => {\n    getUserName();\n    getUserInfo();\n    getBio();\n  }, [currentUser]);\n\n  const handleSaveUsername = (e) => {\n    e.preventDefault()\n    if (username.length === 0) {\n      setShowEmpty(!showEmpty);\n      setTarget(e.target);\n    } else {\n      setTarget(e.target);\n      setShowSuccess(!showSuccess);\n      setTimeout(() => {\n        setBioEditable(!isBioEditable)\n        setUserEditable(!isUserEditable);\n        setShowSuccess(showSuccess);\n      }, 1000);\n      props.changeUsername(username);\n      props.changeBio(bio);\n    }\n  };\n\n\nconst handleSavePassword = (e) => {\n  e.preventDefault()\n  if (confirmPassword.length === 0) {\n    console.log('pute')\n    setTarget(e.target);\n    setShowEmpty(!showEmpty);\n  } else {\n    if(password === confirmPassword) {\n      const newPassword = password\n      currentUser.updatePassword(newPassword).then(() => {\n        setShowSuccess(!showSuccess);\n        setTimeout(() => {\n          setShowSuccess(showSuccess);\n          setPasswordEditable(!isPasswordEditable);\n        }, 1000);\n      }).catch(error => {\n        setShowErrorPassword(true)\n      });\n    } else {\n      setTarget(e.target);\n      setDoesntMatch(!showDoesntMatch)\n    }\n  }\n};\n\nconst handleEditPassword = (e) => {\n  e.preventDefault()\n  setPassword()\n  setConfirmPassword()\n  setPasswordEditable(!isPasswordEditable)\n}\n\nconst handlePasswordChange = (e) => {\n  e.preventDefault()\n  setPassword(e.target.value);\n}\n\nconst handleConfirmPasswordChange = (e) => {\n  e.preventDefault()\n  setConfirmPassword(e.target.value)\n}\n  const handleUsernameChange = (e) => {\n    e.preventDefault()\n    setUsername(e.target.value);\n  };\n\n  const handleBioChange = (e) => {\n    e.preventDefault()\n    setBio(e.target.value);\n  };\n\n  const handleEditUsername = () => {\n    setUserEditable(!isUserEditable);\n  };\n  const handleEditBio = () => {\n    setBioEditable(!isBioEditable);\n  };\n\n  const handleImageUpload = () => {\n    document.querySelector(\"#custom-file\").click();\n  };\n\n  const uploadImage = async (e) => {\n    const image = e.target.files[0];\n    const storage = firebase.storage();\n    const storageRef = storage.ref(`profilePic/${getUserInfo().uid}.jpg`);\n    const userDB = firebase.firestore().collection('users')\n    const tweetsRef = firebase.firestore().collection(\"tweets\");\n    await storageRef.put(image);\n    console.log(\"uploaded\");\n    const photoURL = await storageRef.getDownloadURL();\n    await currentUser.updateProfile({\n      photoURL: photoURL,\n    });\n    await userDB.doc(currentUser.uid).get().then(user => {\n      if (user) {\n        const usersBatch = userDB.firestore.batch();\n      if(user.data().photoUrl !== photoURL) {\n        usersBatch.update(user.ref,{\"photoUrl\":photoURL})\n        usersBatch.commit();\n      }\n    }\n    })\n    await tweetsRef.where('uid', '==', currentUser.uid).get().then((querySnapshot) => {\n      if(querySnapshot){\n        const tweetBatch = tweetsRef.firestore.batch();\n        querySnapshot.docs.forEach((doc) => {\n          if(doc.data().photoUrl !== photoURL) {\n            tweetBatch.update(doc.ref,{\"photoUrl\":photoURL})\n            tweetBatch.commit();\n          }\n        });\n      }\n    });\n    setProfilePic(photoURL);\n  };\n\n  const adaptTextArea = () => {\n    if(!isBioEditable) {\n      return 9\n    } else {\n      return 4\n    }\n  }\n  return (\n    <div className='profile-container'>\n      <div className='image-profile-container'>\n        <div className='setting-image-container'>\n        <img\n          src={getUserInfo().photoUrl}\n          className='profile-image'\n          alt=''\n          width='96'\n          height='96'\n        />\n        </div>\n        <Button\n          className='edit-profile-image-button'\n          onClick={handleImageUpload}\n        >\n          <svg\n            xmlns='http://www.w3.org/2000/svg'\n            viewBox='-2 -4 24 24'\n            width='24'\n            height='24'\n            preserveAspectRatio='xMinYMin'\n            className='icon__icon'\n          >\n            <path d='M4.126 3C4.57 1.275 6.136 0 8 0h4a4.002 4.002 0 0 1 3.874 3H16a4 4 0 0 1 4 4v5a4 4 0 0 1-4 4H4a4 4 0 0 1-4-4V7a4 4 0 0 1 4-4h.126zM10 13a4 4 0 1 0 0-8 4 4 0 0 0 0 8zm6-5a1 1 0 1 0 0-2 1 1 0 0 0 0 2zm-6 3a2 2 0 1 1 0-4 2 2 0 0 1 0 4z'></path>\n          </svg>\n        </Button>\n      </div>\n      {isBioEditable && <Button type='submit' className='edit-button btn btn-light' onClick={() => {\n          handleEditBio()\n          handleEditUsername()\n          }}>\n          Tap to edit\n        </Button>}\n      <h3 className='profile-title'> Username </h3>\n      <Form className='form-container'>\n        <Form.File\n          className='edit-profile-image'\n          id='custom-file'\n          label='Custom file input'\n          custom\n          onChange={uploadImage}\n        />\n          <Form.Control\n            type='text'\n            className='username-input'\n            onChange={handleUsernameChange}\n            value={username}\n            disabled={isUserEditable}\n          />\n\n        <h3 className='profile-title'>Bio</h3>\n        <Form.Control\n          as='textarea'\n          rows={adaptTextArea()}\n          className='bio-input'\n          value={bio}\n          onChange={handleBioChange}\n          disabled={isBioEditable}\n        />\n\n        {!isBioEditable && <Button\n              type='submit'\n              className='save-button btn btn-light'\n              onClick={handleSaveUsername}\n            >\n              Save\n            </Button>}\n            <h3 className='profile-title'>Email</h3>\n        <Form.Control\n          type='text'\n          className='email-input'\n          value={getUserInfo().email}\n          disabled={true}\n        />\n        <h3 className='profile-title'>Password</h3>\n        <Form.Control\n          type='password'\n          className='password-input'\n          value={password}\n          disabled={isPasswordEditable}\n          onChange={handlePasswordChange}\n          placeholder=\"New password\"\n        />\n        \n        {!isPasswordEditable &&         <Form.Control\n          type='password'\n          className='password-input'\n          value={confirmPassword}\n          disabled={isPasswordEditable}\n          onChange={handleConfirmPasswordChange}\n          placeholder=\"Confirm new password\"\n        />}\n        {showErrorPassword && <span>Error: try to sign out and login again </span>}\n        {isPasswordEditable && <Button type='submit' className='edit-password-button btn btn-light' onClick={handleEditPassword}>\n          Edit password\n        </Button>}\n        {!isPasswordEditable && <Button\n              type='submit'\n              className='save-button btn btn-light'\n              onClick={handleSavePassword}\n            >\n              Save\n            </Button>}\n        <Overlay\n          show={showSuccess}\n          target={target}\n          placement='bottom'\n          container={ref.current}\n          containerPadding={30}\n        >\n          <Popover id='popover-contained'>\n            <Popover.Title as='h3'>Saved !</Popover.Title>\n          </Popover>\n        </Overlay>\n\n        <Overlay\n          show={showEmpty}\n          target={target}\n          placement='bottom'\n          container={ref.current}\n          containerPadding={30}\n        >\n          <Popover id='popover-contained'>\n            <Popover.Title as='h3'>Sorry, {username} !</Popover.Title>\n            <Popover.Content>The field can't be empty.</Popover.Content>\n          </Popover>\n        </Overlay>\n\n        <Overlay\n          show={showDoesntMatch}\n          target={target}\n          placement='bottom'\n          container={ref.current}\n          containerPadding={30}\n        >\n          <Popover id='popover-contained'>\n            <Popover.Title as='h3'>Sorry, {username} !</Popover.Title>\n            <Popover.Content>The passwords do not match.</Popover.Content>\n          </Popover>\n        </Overlay>\n      </Form>\n    </div>\n  );\n};\n\nexport default Settings;\n","/home/burslf/Code/twitwi-social-media/src/Component/Search.jsx",[],"/home/burslf/Code/twitwi-social-media/src/Component/PostPage.jsx",["80"],"import TweetBody from './TweetBody'\nimport '../postPage.scss'\nimport firebase from '../firebase-cred/firebase'\nimport { useEffect, useState } from 'react'\nimport { Form } from 'react-bootstrap'\n\nconst PostPage = (props) => {\n    const [tweet, setTweet] = useState([])\n    const tweetPath = window.location.pathname.slice(7)\n    \n    useEffect(() => {\n        const tweetDB = firebase.firestore().collection(\"tweets\")\n        tweetDB.doc(tweetPath).get()\n            .then(tweet => {\n                const actualTweet = []\n                actualTweet.push(tweet.data())\n                setTweet(actualTweet)\n            })\n    }, [])\n        if(tweet.length > 0) {\n            return (\n                <div className='post-page-container'>\n                    <TweetBody tweets={tweet}/>\n                    <Form.Control as='textarea' className='comment-input' rows={3}/>\n                </div>\n            )\n        } else {\n            return (\n                <div></div>\n            )\n        }    \n}\n\nexport default PostPage","/home/burslf/Code/twitwi-social-media/src/Component/TweetForm.jsx",[],"/home/burslf/Code/twitwi-social-media/src/Component/TweetBody.jsx",[],"/home/burslf/Code/twitwi-social-media/src/Component/MonModal.jsx",[],{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":1,"column":33,"nodeType":"87","messageId":"88","endLine":1,"endColumn":39},{"ruleId":"85","severity":1,"message":"89","line":24,"column":10,"nodeType":"87","messageId":"88","endLine":24,"endColumn":22},{"ruleId":"85","severity":1,"message":"90","line":24,"column":24,"nodeType":"87","messageId":"88","endLine":24,"endColumn":39},{"ruleId":"91","severity":1,"message":"92","line":35,"column":6,"nodeType":"93","endLine":35,"endColumn":8,"suggestions":"94"},{"ruleId":"85","severity":1,"message":"95","line":38,"column":9,"nodeType":"87","messageId":"88","endLine":38,"endColumn":16},{"ruleId":"96","severity":1,"message":"97","line":57,"column":78,"nodeType":"98","messageId":"99","endLine":57,"endColumn":79,"suggestions":"100"},{"ruleId":"96","severity":1,"message":"101","line":57,"column":97,"nodeType":"98","messageId":"99","endLine":57,"endColumn":98,"suggestions":"102"},{"ruleId":"85","severity":1,"message":"103","line":15,"column":9,"nodeType":"87","messageId":"88","endLine":15,"endColumn":21},{"ruleId":"91","severity":1,"message":"104","line":55,"column":6,"nodeType":"93","endLine":55,"endColumn":32,"suggestions":"105"},{"ruleId":"106","severity":1,"message":"107","line":157,"column":13,"nodeType":"108","endLine":157,"endColumn":44},{"ruleId":"85","severity":1,"message":"109","line":23,"column":10,"nodeType":"87","messageId":"88","endLine":23,"endColumn":20},{"ruleId":"91","severity":1,"message":"110","line":66,"column":6,"nodeType":"93","endLine":66,"endColumn":19,"suggestions":"111"},{"ruleId":"91","severity":1,"message":"112","line":19,"column":8,"nodeType":"93","endLine":19,"endColumn":10,"suggestions":"113"},"no-native-reassign",["114"],"no-negated-in-lhs",["115"],"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'tweetsToShow' is assigned a value but never used.","'setTweetsToShow' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currentUser' and 'getTweets'. Either include them or remove the dependency array.","ArrayExpression",["116"],"'getDate' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\-.","Literal","unnecessaryEscape",["117","118"],"Unnecessary escape character: \\:.",["119","120"],"'handleLogout' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getUserTweets', 'profilePath', 'userDB', and 'userInfos'. Either include them or remove the dependency array.",["121"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'profilePic' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getUserName'. Either include it or remove the dependency array.",["122"],"React Hook useEffect has a missing dependency: 'tweetPath'. Either include it or remove the dependency array.",["123"],"no-global-assign","no-unsafe-negation",{"desc":"124","fix":"125"},{"messageId":"126","fix":"127","desc":"128"},{"messageId":"129","fix":"130","desc":"131"},{"messageId":"126","fix":"132","desc":"128"},{"messageId":"129","fix":"133","desc":"131"},{"desc":"134","fix":"135"},{"desc":"136","fix":"137"},{"desc":"138","fix":"139"},"Update the dependencies array to be: [currentUser, getTweets]",{"range":"140","text":"141"},"removeEscape",{"range":"142","text":"143"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"144","text":"145"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"146","text":"143"},{"range":"147","text":"145"},"Update the dependencies array to be: [currentUser, getUserTweets, isFollowing, profilePath, userDB, userInfos]",{"range":"148","text":"149"},"Update the dependencies array to be: [currentUser, getUserName]",{"range":"150","text":"151"},"Update the dependencies array to be: [tweetPath]",{"range":"152","text":"153"},[994,996],"[currentUser, getTweets]",[1650,1651],"",[1650,1650],"\\",[1669,1670],[1669,1669],[1994,2020],"[currentUser, getUserTweets, isFollowing, profilePath, userDB, userInfos]",[2166,2179],"[currentUser, getUserName]",[629,631],"[tweetPath]"]